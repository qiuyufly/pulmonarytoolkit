classdef MYOutputEmphysemaDensity < PTKPlugin
    % MYOutputEmphysemaDensity. Plugin for outputing the obj emphysema density
    %
    %     This is a plugin for a self-built function of the Pulmonary Toolkit. Plugins can be run using
    %     the gui, or through the interfaces provided by the Pulmonary Toolkit.
    %     See PTKPlugin.m for more information on how to run plugins.
    %
    %     Plugins should not be run directly from your code.
    %
    %     The output image generated by GenerateImageFromResults creates a
    %     colour-coded segmentation image with true airway points shown as blue
    %     and explosion points shown in red.
    %
    %
    %     Licence
    %     -------
    %     Part of the TD Pulmonary Toolkit. https://github.com/tomdoel/pulmonarytoolkit
    %     Author: Tom Doel, 2012.  www.tomdoel.com
    %     Distributed under the GNU GPL v3 licence. Please see website for details.
    %
    
    properties
        ButtonText = 'Output Emphysema Density'
        ToolTip = 'Output Emphysema data cloud with density information and convert it into exdata and ipdata'
        Category = 'Export'
        
        AllowResultsToBeCached = true
        AlwaysRunPlugin = false
        PluginType = 'ReplaceOverlay'
        HidePluginInDisplay = false
        FlattenPreviewImage = true
        PTKVersion = '1'
        ButtonWidth = 6
        ButtonHeight = 2
        GeneratePreview = true
        Visibility = 'Developer'
    end
    
    methods (Static)
        function results=RunPlugin(dataset,reporting)
            if nargin < 2
                reporting = PTKReportingDefault;
            end
            
            LungDicomImage = PTKLoadImages(dataset.GetImageInfo);
            Raw = LungDicomImage.RawImage;
            
            lungs=dataset.GetResult('PTKLeftAndRightLungs');
            
            left_lung_index = find(lungs.RawImage==2);
            right_lung_index = find(lungs.RawImage==1);
            
            VoxelSize=lungs.VoxelSize;
            OriginalImageSize=lungs.OriginalImageSize;
            start_crop=lungs.Origin;
            image_size = lungs.ImageSize;
            
            [start_crop,end_crop]=MYGetLungROIForCT(LungDicomImage);
            crop_raw = Raw(start_crop(1):end_crop(1),start_crop(2):end_crop(2),start_crop(3):end_crop(3));
            
            left_lung_HU = LungDicomImage.GrayscaleToRescaled(crop_raw(left_lung_index));
            right_lung_HU = LungDicomImage.GrayscaleToRescaled(crop_raw(right_lung_index));
            
            emphy_left_index = left_lung_index(left_lung_HU<-950);
            emphy_right_index = right_lung_index(right_lung_HU<-950);
            
            emphy_left_HU = LungDicomImage.GrayscaleToRescaled(crop_raw(emphy_left_index));
            emphy_right_HU = LungDicomImage.GrayscaleToRescaled(crop_raw(emphy_right_index));
            
            emphy_left_density = double(emphy_left_HU)/1024+1;
            emphy_right_density = double(emphy_right_HU)/1024+1;
            
            [x_left,y_left,z_left] = ind2sub(image_size,emphy_left_index);
            [x_right,y_right,z_right] = ind2sub(image_size,emphy_right_index);
            
            emphy_index = [emphy_left_index;emphy_right_index];
            emphy_image = zeros(image_size);
            emphy_image(emphy_index) = 1;
            
            offset_value = 0;
            
            % Get the saving path
            data_info=dataset.GetImageInfo;
            current_data_path=data_info.ImagePath;
            save_root_path = uigetdir(current_data_path, 'Select Directory to Save Emph density data');
            save_full_path=fullfile(save_root_path,'MYEmphDensity');
            if ~exist(save_full_path)
                mkdir(save_full_path);
            end
            
            x_coords_left1 = (y_left+start_crop(2)-1).*VoxelSize(2);
            y_coords_left1 = OriginalImageSize(2).*VoxelSize(2)-(OriginalImageSize(1)-(x_left+start_crop(1)-1)).*VoxelSize(1);
            z_coords_left1 = -(z_left+start_crop(3)-1).*VoxelSize(3);
            x_coords_right1 = (y_right+start_crop(2)-1).*VoxelSize(2).*2;
            y_coords_right1 = OriginalImageSize(2).*VoxelSize(2)-(OriginalImageSize(1)-(x_right+start_crop(1)-1)).*VoxelSize(1).*2;
            z_coords_right1 = -(z_right+start_crop(3)-1).*VoxelSize(3);
            
            save_data_left = [x_coords_left1,y_coords_left1,z_coords_left1];
            save_data_right = [x_coords_right1,y_coords_right1,z_coords_right1];
            
            % Calculate the unit voxel volume
            unit_voxel_volume = VoxelSize(1).*VoxelSize(2).*VoxelSize(3);
            
            save_file_name_ipdata_left = strcat('Emphysema','_density_left.ipdata');
            save_file_name_exdata_left = strcat('Emphysema','_density_left.exdata');
            save_file_name_ipdata_right = strcat('Emphysema','_density_right.ipdata');
            save_file_name_exdata_right = strcat('Emphysema','_density_right.exdata');
            
            group_name_left = strcat('Emphysema','_density_left');
            group_name_right = strcat('Emphysema','_density_right');
            
            emphy_mean_density_left = mean(emphy_left_density);
            emphy_mean_density_right = mean(emphy_right_density);
            SD_density_value_left = sqrt(sum((emphy_left_density-emphy_mean_density_left).^2)./length(emphy_left_density));
            SD_density_value_right = sqrt(sum((emphy_right_density-emphy_mean_density_right).^2)./length(emphy_right_density));
            volume_left = unit_voxel_volume.*length(emphy_left_density);
            volume_right = unit_voxel_volume.*length(emphy_right_density);
            
            MYFieldIpdata(save_file_name_ipdata_left,save_data_left,emphy_left_density,group_name_left,0,save_full_path);
            MYExportField(save_file_name_exdata_left,save_data_left,emphy_left_density,group_name_left,offset_value,save_full_path);
            offset_value = offset_value + length(emphy_left_density) + 100;
            MYFieldIpdata(save_file_name_ipdata_right,save_data_right,emphy_right_density,group_name_right,0,save_full_path);
            MYExportField(save_file_name_exdata_right,save_data_right,emphy_right_density,group_name_right,offset_value,save_full_path);
            offset_value = offset_value + length(emphy_right_density) + 100;
            
            emphy_mean_density_left
            emphy_mean_density_right
            SD_density_value_left
            SD_density_value_right
            volume_left
            volume_right
            
            lungs.ChangeRawImage(emphy_image);
            results = lungs.Copy;
        end
    end
end
